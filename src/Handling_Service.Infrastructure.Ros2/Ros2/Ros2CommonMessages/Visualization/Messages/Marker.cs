//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ros2cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

#nullable enable

namespace Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization
{
    /// <summary>
    /// See:
    /// - http://www.ros.org/wiki/rviz/DisplayTypes/Marker
    /// - http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes
    /// 
    /// for more information on using this message with rviz.
    /// </summary>
    /// <remarks>
    /// Message interface definition for <c>visualization_msgs/msg/Marker</c>.
    /// </remarks>
    [global::Rosidl.Runtime.TypeSupportAttribute("visualization_msgs/msg/Marker")]
    public unsafe partial class Marker : global::Rosidl.Runtime.IMessage
    {
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static string TypeSupportName => "visualization_msgs/msg/Marker";
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.TypeSupportHandle GetTypeSupportHandle()
        {
            return new global::Rosidl.Runtime.TypeSupportHandle(_PInvoke(), global::Rosidl.Runtime.HandleType.Message);
            
            [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
            [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_typesupport_c", EntryPoint = "rosidl_typesupport_c__get_message_type_support_handle__visualization_msgs__msg__Marker")]
            static extern nint _PInvoke();
        }
        
        /// <summary>
        /// Create a new instance of <see cref="Marker"/> with fields initialized to specified values.
        /// </summary>
        /// <param name='header'>
        /// Header for timestamp and frame id.
        /// <para>(originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>)</para>
        /// </param>
        /// <param name='ns'>
        /// Namespace in which to place the object.
        /// Used in conjunction with id to create a unique name for the object.
        /// <para>(originally defined as: <c><![CDATA[string ns]]></c>)</para>
        /// </param>
        /// <param name='id'>
        /// Object ID used in conjunction with the namespace for manipulating and deleting the object later.
        /// <para>(originally defined as: <c><![CDATA[int32 id]]></c>)</para>
        /// </param>
        /// <param name='type'>
        /// Type of object.
        /// <para>(originally defined as: <c><![CDATA[int32 type]]></c>)</para>
        /// </param>
        /// <param name='action'>
        /// Action to take; one of:
        /// - 0 add/modify an object
        /// - 1 (deprecated)
        /// - 2 deletes an object (with the given ns and id)
        /// - 3 deletes all objects (or those with the given ns if any)
        /// <para>(originally defined as: <c><![CDATA[int32 action]]></c>)</para>
        /// </param>
        /// <param name='pose'>
        /// Pose of the object with respect the frame_id specified in the header.
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>)</para>
        /// </param>
        /// <param name='scale'>
        /// Scale of the object; 1,1,1 means default (usually 1 meter square).
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Vector3 scale]]></c>)</para>
        /// </param>
        /// <param name='color'>
        /// Color of the object; in the range: [0.0-1.0]
        /// <para>(originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA color]]></c>)</para>
        /// </param>
        /// <param name='lifetime'>
        /// How long the object should last before being automatically deleted.
        /// 0 indicates forever.
        /// <para>(originally defined as: <c><![CDATA[builtin_interfaces/msg/Duration lifetime]]></c>)</para>
        /// </param>
        /// <param name='frameLocked'>
        /// If this marker should be frame-locked, i.e. retransformed into its frame every timestep.
        /// <para>(originally defined as: <c><![CDATA[bool frame_locked]]></c>)</para>
        /// </param>
        /// <param name='points'>
        /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ARROW_STRIP, etc.)
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Point[] points]]></c>)</para>
        /// </param>
        /// <param name='colors'>
        /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, etc.)
        /// The number of colors provided must either be 0 or equal to the number of points provided.
        /// NOTE: alpha is not yet used
        /// <para>(originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA[] colors]]></c>)</para>
        /// </param>
        /// <param name='textureResource'>
        /// Texture resource is a special URI that can either reference a texture file in
        /// a format acceptable to (resource retriever)[https://docs.ros.org/en/rolling/p/resource_retriever/]
        /// or an embedded texture via a string matching the format:
        /// "embedded://texture_name"
        /// <para>(originally defined as: <c><![CDATA[string texture_resource]]></c>)</para>
        /// </param>
        /// <param name='texture'>
        /// An image to be loaded into the rendering engine as the texture for this marker.
        /// This will be used iff texture_resource is set to embedded.
        /// <para>(originally defined as: <c><![CDATA[sensor_msgs/msg/CompressedImage texture]]></c>)</para>
        /// </param>
        /// <param name='uvCoordinates'>
        /// Location of each vertex within the texture; in the range: [0.0-1.0]
        /// <para>(originally defined as: <c><![CDATA[visualization_msgs/msg/UVCoordinate[] uv_coordinates]]></c>)</para>
        /// </param>
        /// <param name='text'>
        /// Only used for text markers
        /// <para>(originally defined as: <c><![CDATA[string text]]></c>)</para>
        /// </param>
        /// <param name='meshResource'>
        /// Only used for MESH_RESOURCE markers.
        /// Similar to texture_resource, mesh_resource uses resource retriever to load a mesh.
        /// Optionally, a mesh file can be sent in-message via the mesh_file field. If doing so,
        /// use the following format for mesh_resource:
        /// "embedded://mesh_name"
        /// <para>(originally defined as: <c><![CDATA[string mesh_resource]]></c>)</para>
        /// </param>
        /// <param name='meshFile'>
        /// Originally defined as: <c><![CDATA[visualization_msgs/msg/MeshFile mesh_file]]></c>
        /// </param>
        /// <param name='meshUseEmbeddedMaterials'>
        /// Originally defined as: <c><![CDATA[bool mesh_use_embedded_materials]]></c>
        /// </param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public Marker(
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header? @header = null,
            string @ns = "",
            int @id = 0,
            int @type = 0,
            int @action = 0,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose? @pose = null,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Vector3? @scale = null,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA? @color = null,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Builtin.Duration? @lifetime = null,
            bool @frameLocked = false,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point[]? @points = null,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA[]? @colors = null,
            string @textureResource = "",
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Sensor.CompressedImage? @texture = null,
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate[]? @uvCoordinates = null,
            string @text = "",
            string @meshResource = "",
            global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.MeshFile? @meshFile = null,
            bool @meshUseEmbeddedMaterials = false
        )
        {
            Header = @header ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header();
            Ns = @ns;
            Id = @id;
            Type = @type;
            Action = @action;
            Pose = @pose ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose();
            Scale = @scale ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Vector3();
            Color = @color ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA();
            Lifetime = @lifetime ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Builtin.Duration();
            FrameLocked = @frameLocked;
            Points = @points ?? global::System.Array.Empty<global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point>();
            Colors = @colors ?? global::System.Array.Empty<global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA>();
            TextureResource = @textureResource;
            Texture = @texture ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Sensor.CompressedImage();
            UvCoordinates = @uvCoordinates ?? global::System.Array.Empty<global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate>();
            Text = @text;
            MeshResource = @meshResource;
            MeshFile = @meshFile ?? new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.MeshFile();
            MeshUseEmbeddedMaterials = @meshUseEmbeddedMaterials;
        }
        
        
        /// <summary>
        /// Create a new instance of <see cref="Marker"/>, and copy its data from the specified <see cref="Priv"/> structure.
        /// </summary>
        /// <param name="priv">The <see cref="Priv"/> structure to be copied from.</param>
        /// <param name="textEncoding">Text encoding of the strings in the <see cref="Priv"/> structure and its containing structures, if any.</param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public Marker(in Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Header = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header(in priv.Header, textEncoding);
            this.Ns = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Ns.AsSpan(), textEncoding);
            this.Id = priv.Id;
            this.Type = priv.Type;
            this.Action = priv.Action;
            this.Pose = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose(in priv.Pose, textEncoding);
            this.Scale = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Vector3(in priv.Scale, textEncoding);
            this.Color = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA(in priv.Color, textEncoding);
            this.Lifetime = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Builtin.Duration(in priv.Lifetime, textEncoding);
            this.FrameLocked = priv.FrameLocked;
        
            this.Points = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point[priv.Points.Size];
            var Points_span = priv.Points.AsSpan();
            for (int __i = 0; __i < this.Points.Length; __i++)
            {
                this.Points[__i] = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point(in Points_span[__i], textEncoding);
            }
        
            this.Colors = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA[priv.Colors.Size];
            var Colors_span = priv.Colors.AsSpan();
            for (int __i = 0; __i < this.Colors.Length; __i++)
            {
                this.Colors[__i] = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA(in Colors_span[__i], textEncoding);
            }
        
            this.TextureResource = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.TextureResource.AsSpan(), textEncoding);
            this.Texture = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Sensor.CompressedImage(in priv.Texture, textEncoding);
        
            this.UvCoordinates = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate[priv.UvCoordinates.Size];
            var UvCoordinates_span = priv.UvCoordinates.AsSpan();
            for (int __i = 0; __i < this.UvCoordinates.Length; __i++)
            {
                this.UvCoordinates[__i] = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate(in UvCoordinates_span[__i], textEncoding);
            }
        
            this.Text = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Text.AsSpan(), textEncoding);
            this.MeshResource = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.MeshResource.AsSpan(), textEncoding);
            this.MeshFile = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.MeshFile(in priv.MeshFile, textEncoding);
            this.MeshUseEmbeddedMaterials = priv.MeshUseEmbeddedMaterials;
        }
        
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 ARROW = 0]]></c>
        /// </summary>
        public const int ARROW = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 CUBE = 1]]></c>
        /// </summary>
        public const int CUBE = 1;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 SPHERE = 2]]></c>
        /// </summary>
        public const int SPHERE = 2;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 CYLINDER = 3]]></c>
        /// </summary>
        public const int CYLINDER = 3;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 LINE_STRIP = 4]]></c>
        /// </summary>
        public const int LINE_STRIP = 4;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 LINE_LIST = 5]]></c>
        /// </summary>
        public const int LINE_LIST = 5;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 CUBE_LIST = 6]]></c>
        /// </summary>
        public const int CUBE_LIST = 6;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 SPHERE_LIST = 7]]></c>
        /// </summary>
        public const int SPHERE_LIST = 7;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 POINTS = 8]]></c>
        /// </summary>
        public const int POINTS = 8;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 TEXT_VIEW_FACING = 9]]></c>
        /// </summary>
        public const int TEXT_VIEW_FACING = 9;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 MESH_RESOURCE = 10]]></c>
        /// </summary>
        public const int MESH_RESOURCE = 10;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 TRIANGLE_LIST = 11]]></c>
        /// </summary>
        public const int TRIANGLE_LIST = 11;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 ARROW_STRIP = 12]]></c>
        /// </summary>
        public const int ARROW_STRIP = 12;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 ADD = 0]]></c>
        /// </summary>
        public const int ADD = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 MODIFY = 0]]></c>
        /// </summary>
        public const int MODIFY = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 DELETE = 2]]></c>
        /// </summary>
        public const int DELETE = 2;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[int32 DELETEALL = 3]]></c>
        /// </summary>
        public const int DELETEALL = 3;
        
        /// <summary>
        /// Header for timestamp and frame id.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header Header { get; set; }
        
        /// <summary>
        /// Namespace in which to place the object.
        /// Used in conjunction with id to create a unique name for the object.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string ns]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string Ns { get; set; }
        
        /// <summary>
        /// Object ID used in conjunction with the namespace for manipulating and deleting the object later.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[int32 id]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public int Id { get; set; }
        
        /// <summary>
        /// Type of object.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[int32 type]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public int Type { get; set; }
        
        /// <summary>
        /// Action to take; one of:
        /// - 0 add/modify an object
        /// - 1 (deprecated)
        /// - 2 deletes an object (with the given ns and id)
        /// - 3 deletes all objects (or those with the given ns if any)
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[int32 action]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public int Action { get; set; }
        
        /// <summary>
        /// Pose of the object with respect the frame_id specified in the header.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose Pose { get; set; }
        
        /// <summary>
        /// Scale of the object; 1,1,1 means default (usually 1 meter square).
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Vector3 scale]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Vector3 Scale { get; set; }
        
        /// <summary>
        /// Color of the object; in the range: [0.0-1.0]
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA color]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA Color { get; set; }
        
        /// <summary>
        /// How long the object should last before being automatically deleted.
        /// 0 indicates forever.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[builtin_interfaces/msg/Duration lifetime]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Builtin.Duration Lifetime { get; set; }
        
        /// <summary>
        /// If this marker should be frame-locked, i.e. retransformed into its frame every timestep.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[bool frame_locked]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public bool FrameLocked { get; set; }
        
        /// <summary>
        /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ARROW_STRIP, etc.)
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Point[] points]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point[] Points { get; set; }
        
        /// <summary>
        /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, etc.)
        /// The number of colors provided must either be 0 or equal to the number of points provided.
        /// NOTE: alpha is not yet used
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA[] colors]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA[] Colors { get; set; }
        
        /// <summary>
        /// Texture resource is a special URI that can either reference a texture file in
        /// a format acceptable to (resource retriever)[https://docs.ros.org/en/rolling/p/resource_retriever/]
        /// or an embedded texture via a string matching the format:
        /// "embedded://texture_name"
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string texture_resource]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string TextureResource { get; set; }
        
        /// <summary>
        /// An image to be loaded into the rendering engine as the texture for this marker.
        /// This will be used iff texture_resource is set to embedded.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[sensor_msgs/msg/CompressedImage texture]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Sensor.CompressedImage Texture { get; set; }
        
        /// <summary>
        /// Location of each vertex within the texture; in the range: [0.0-1.0]
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[visualization_msgs/msg/UVCoordinate[] uv_coordinates]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate[] UvCoordinates { get; set; }
        
        /// <summary>
        /// Only used for text markers
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string text]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string Text { get; set; }
        
        /// <summary>
        /// Only used for MESH_RESOURCE markers.
        /// Similar to texture_resource, mesh_resource uses resource retriever to load a mesh.
        /// Optionally, a mesh file can be sent in-message via the mesh_file field. If doing so,
        /// use the following format for mesh_resource:
        /// "embedded://mesh_name"
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string mesh_resource]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string MeshResource { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[visualization_msgs/msg/MeshFile mesh_file]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.MeshFile MeshFile { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[bool mesh_use_embedded_materials]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public bool MeshUseEmbeddedMaterials { get; set; }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(nint data, global::System.Text.Encoding textEncoding)
        {
            WriteTo(ref global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(ref Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Header.WriteTo(ref priv.Header, textEncoding);
            priv.Ns.CopyFrom(this.Ns, textEncoding);
            priv.Id = this.Id;
            priv.Type = this.Type;
            priv.Action = this.Action;
            this.Pose.WriteTo(ref priv.Pose, textEncoding);
            this.Scale.WriteTo(ref priv.Scale, textEncoding);
            this.Color.WriteTo(ref priv.Color, textEncoding);
            this.Lifetime.WriteTo(ref priv.Lifetime, textEncoding);
            priv.FrameLocked = this.FrameLocked;
            
            priv.Points = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point.PrivSequence(this.Points.Length);
            var Points_span = priv.Points.AsSpan();
            for (int __i = 0; __i < this.Points.Length; __i++)
            {
                this.Points[__i].WriteTo(ref Points_span[__i], textEncoding);
            }
            
            priv.Colors = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA.PrivSequence(this.Colors.Length);
            var Colors_span = priv.Colors.AsSpan();
            for (int __i = 0; __i < this.Colors.Length; __i++)
            {
                this.Colors[__i].WriteTo(ref Colors_span[__i], textEncoding);
            }
            
            priv.TextureResource.CopyFrom(this.TextureResource, textEncoding);
            this.Texture.WriteTo(ref priv.Texture, textEncoding);
            
            priv.UvCoordinates = new global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate.PrivSequence(this.UvCoordinates.Length);
            var UvCoordinates_span = priv.UvCoordinates.AsSpan();
            for (int __i = 0; __i < this.UvCoordinates.Length; __i++)
            {
                this.UvCoordinates[__i].WriteTo(ref UvCoordinates_span[__i], textEncoding);
            }
            
            priv.Text.CopyFrom(this.Text, textEncoding);
            priv.MeshResource.CopyFrom(this.MeshResource, textEncoding);
            this.MeshFile.WriteTo(ref priv.MeshFile, textEncoding);
            priv.MeshUseEmbeddedMaterials = this.MeshUseEmbeddedMaterials;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.IMessage CreateFrom(nint data, global::System.Text.Encoding textEncoding)
        {
            return new Marker(in global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static nint UnsafeCreate()
        {
            return new(Priv.Create());
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeDestroy(nint data)
        {
            Priv.Destroy((Priv*)data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitialize(nint data)
        {
            return Priv.TryInitialize(out System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalize(nint data)
        {
            Priv.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitializeSequence(int size, nint data)
        {
            return PrivSequence.TryInitialize(size, out System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalizeSequence(nint data)
        {
            PrivSequence.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        /// <summary>
        /// See:
        /// - http://www.ros.org/wiki/rviz/DisplayTypes/Marker
        /// - http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes
        /// 
        /// for more information on using this message with rviz.
        /// </summary>
        /// <remarks>
        /// Blittable native structure for <c>visualization_msgs/msg/Marker</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct Priv : global::System.IEquatable<Priv>, global::System.IDisposable
        {
            /// <summary>
            /// Header for timestamp and frame id.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header.Priv Header;
            
            /// <summary>
            /// Namespace in which to place the object.
            /// Used in conjunction with id to create a unique name for the object.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string ns]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString Ns;
            
            /// <summary>
            /// Object ID used in conjunction with the namespace for manipulating and deleting the object later.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[int32 id]]></c>
            /// </remarks>
            public int Id;
            
            /// <summary>
            /// Type of object.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[int32 type]]></c>
            /// </remarks>
            public int Type;
            
            /// <summary>
            /// Action to take; one of:
            /// - 0 add/modify an object
            /// - 1 (deprecated)
            /// - 2 deletes an object (with the given ns and id)
            /// - 3 deletes all objects (or those with the given ns if any)
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[int32 action]]></c>
            /// </remarks>
            public int Action;
            
            /// <summary>
            /// Pose of the object with respect the frame_id specified in the header.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose.Priv Pose;
            
            /// <summary>
            /// Scale of the object; 1,1,1 means default (usually 1 meter square).
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Vector3 scale]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Vector3.Priv Scale;
            
            /// <summary>
            /// Color of the object; in the range: [0.0-1.0]
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA color]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA.Priv Color;
            
            /// <summary>
            /// How long the object should last before being automatically deleted.
            /// 0 indicates forever.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[builtin_interfaces/msg/Duration lifetime]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Builtin.Duration.Priv Lifetime;
            
            /// <summary>
            /// If this marker should be frame-locked, i.e. retransformed into its frame every timestep.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[bool frame_locked]]></c>
            /// </remarks>
            public bool FrameLocked;
            
            /// <summary>
            /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, ARROW_STRIP, etc.)
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Point[] points]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point.PrivSequence Points;
            
            /// <summary>
            /// Only used if the type specified has some use for them (eg. POINTS, LINE_STRIP, etc.)
            /// The number of colors provided must either be 0 or equal to the number of points provided.
            /// NOTE: alpha is not yet used
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[std_msgs/msg/ColorRGBA[] colors]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.ColorRGBA.PrivSequence Colors;
            
            /// <summary>
            /// Texture resource is a special URI that can either reference a texture file in
            /// a format acceptable to (resource retriever)[https://docs.ros.org/en/rolling/p/resource_retriever/]
            /// or an embedded texture via a string matching the format:
            /// "embedded://texture_name"
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string texture_resource]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString TextureResource;
            
            /// <summary>
            /// An image to be loaded into the rendering engine as the texture for this marker.
            /// This will be used iff texture_resource is set to embedded.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[sensor_msgs/msg/CompressedImage texture]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Sensor.CompressedImage.Priv Texture;
            
            /// <summary>
            /// Location of each vertex within the texture; in the range: [0.0-1.0]
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[visualization_msgs/msg/UVCoordinate[] uv_coordinates]]></c>
            /// </remarks>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.UVCoordinate.PrivSequence UvCoordinates;
            
            /// <summary>
            /// Only used for text markers
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string text]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString Text;
            
            /// <summary>
            /// Only used for MESH_RESOURCE markers.
            /// Similar to texture_resource, mesh_resource uses resource retriever to load a mesh.
            /// Optionally, a mesh file can be sent in-message via the mesh_file field. If doing so,
            /// use the following format for mesh_resource:
            /// "embedded://mesh_name"
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string mesh_resource]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString MeshResource;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[visualization_msgs/msg/MeshFile mesh_file]]></c>
            /// </summary>
            public global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.MeshFile.Priv MeshFile;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[bool mesh_use_embedded_materials]]></c>
            /// </summary>
            public bool MeshUseEmbeddedMaterials;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv()
            {
                ThrowIfNonSuccess(TryInitialize(out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(in Priv src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv* src)
            {
                fixed (Priv* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in Priv input, out Priv output)
            {
                fixed (Priv* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(Priv other)
            {
                return Priv.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is Priv s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                var __hashCode = new global::System.HashCode();
                __hashCode.Add(this.Header);
                __hashCode.Add(this.Ns);
                __hashCode.Add(this.Id);
                __hashCode.Add(this.Type);
                __hashCode.Add(this.Action);
                __hashCode.Add(this.Pose);
                __hashCode.Add(this.Scale);
                __hashCode.Add(this.Color);
                __hashCode.Add(this.Lifetime);
                __hashCode.Add(this.FrameLocked);
                __hashCode.Add(this.Points);
                __hashCode.Add(this.Colors);
                __hashCode.Add(this.TextureResource);
                __hashCode.Add(this.Texture);
                __hashCode.Add(this.UvCoordinates);
                __hashCode.Add(this.Text);
                __hashCode.Add(this.MeshResource);
                __hashCode.Add(this.MeshFile);
                __hashCode.Add(this.MeshUseEmbeddedMaterials);
                return __hashCode.ToHashCode();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(Priv lhs, Priv rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(Priv lhs, Priv rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static Priv* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__create")]
                static extern Priv* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(Priv* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__destroy")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(out Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    return _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__init")]
                static extern bool _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__fini")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in Priv lhs, in Priv rhs)
            {
                fixed (Priv* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__are_qual")]
                static extern bool _PInvoke(Priv* lhs, Priv* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(Priv* input, Priv* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__copy")]
                static extern bool _PInvoke(Priv* input, Priv* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.Marker.Priv.{caller}'.");
                }
            }
        }
        
        /// <summary>
        /// See:
        /// - http://www.ros.org/wiki/rviz/DisplayTypes/Marker
        /// - http://www.ros.org/wiki/rviz/Tutorials/Markers%3A%20Basic%20Shapes
        /// 
        /// for more information on using this message with rviz.
        /// </summary>
        /// <remarks>
        /// Blittable native sequence structure for <c>visualization_msgs/msg/Marker</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct PrivSequence : global::System.IEquatable<PrivSequence>, global::System.IDisposable
        {
            private Priv* __data;
            
            private nuint __size;
            
            private nuint __capacity;
            
            public int Size => (int)__size;
            
            public int Capcacity => (int)__capacity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence()
                : this(0)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(int size)
            {
                ThrowIfNonSuccess(TryInitialize(size, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(in PrivSequence src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(System.ReadOnlySpan<Priv> src)
                : this(src.Length)
            {
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public System.Span<Priv> AsSpan()
            {
                return new(__data, Size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(System.ReadOnlySpan<Priv> src)
            {
                Finalize(ref this);
                ThrowIfNonSuccess(TryInitialize(src.Length, out this));
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence* src)
            {
                fixed (PrivSequence* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in PrivSequence input, out PrivSequence output)
            {
                fixed (PrivSequence* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(PrivSequence other)
            {
                return PrivSequence.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is PrivSequence s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                return global::System.HashCode.Combine((nint)__data, __size, __capacity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(PrivSequence lhs, PrivSequence rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(PrivSequence lhs, PrivSequence rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static PrivSequence* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__create")]
                static extern PrivSequence* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(PrivSequence* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__destroy")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(int size, out PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    return _PInvoke(pMsg, (uint)size);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__init")]
                static extern bool _PInvoke(PrivSequence* msg, nuint size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__fini")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in PrivSequence lhs, in PrivSequence rhs)
            {
                fixed (PrivSequence* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__are_qual")]
                static extern bool _PInvoke(PrivSequence* lhs, PrivSequence* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(PrivSequence* input, PrivSequence* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__Marker__Sequence__copy")]
                static extern bool _PInvoke(PrivSequence* input, PrivSequence* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.Marker.PrivSequence.{caller}'.");
                }
            }
        }
    }
}
