//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ros2cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

#nullable enable

namespace Handling_Service.Core.Ros2.Interfaces.Visualization
{
    /// <summary>
    /// Represents a control that is to be displayed together with an interactive marker
    /// </summary>
    /// <remarks>
    /// Message interface definition for <c>visualization_msgs/msg/InteractiveMarkerControl</c>.
    /// </remarks>
    [global::Rosidl.Runtime.TypeSupportAttribute("visualization_msgs/msg/InteractiveMarkerControl")]
    public unsafe partial class InteractiveMarkerControl : global::Rosidl.Runtime.IMessage
    {
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static string TypeSupportName => "visualization_msgs/msg/InteractiveMarkerControl";
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.TypeSupportHandle GetTypeSupportHandle()
        {
            return new global::Rosidl.Runtime.TypeSupportHandle(_PInvoke(), global::Rosidl.Runtime.HandleType.Message);
            
            [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
            [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_typesupport_c", EntryPoint = "rosidl_typesupport_c__get_message_type_support_handle__visualization_msgs__msg__InteractiveMarkerControl")]
            static extern nint _PInvoke();
        }
        
        /// <summary>
        /// Create a new instance of <see cref="InteractiveMarkerControl"/> with fields initialized to specified values.
        /// </summary>
        /// <param name='name'>
        /// Identifying string for this control.
        /// You need to assign a unique value to this to receive feedback from the GUI
        /// on what actions the user performs on this control (e.g. a button click).
        /// <para>(originally defined as: <c><![CDATA[string name]]></c>)</para>
        /// </param>
        /// <param name='orientation'>
        /// Defines the local coordinate frame (relative to the pose of the parent
        /// interactive marker) in which is being rotated and translated.
        /// Default: Identity
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Quaternion orientation]]></c>)</para>
        /// </param>
        /// <param name='orientationMode'>
        /// Originally defined as: <c><![CDATA[uint8 orientation_mode]]></c>
        /// </param>
        /// <param name='interactionMode'>
        /// Originally defined as: <c><![CDATA[uint8 interaction_mode]]></c>
        /// </param>
        /// <param name='alwaysVisible'>
        /// If true, the contained markers will also be visible
        /// when the gui is not in interactive mode.
        /// <para>(originally defined as: <c><![CDATA[bool always_visible]]></c>)</para>
        /// </param>
        /// <param name='markers'>
        /// Markers to be displayed as custom visual representation.
        /// Leave this empty to use the default control handles.
        /// 
        /// Note:
        /// - The markers can be defined in an arbitrary coordinate frame,
        /// but will be transformed into the local frame of the interactive marker.
        /// - If the header of a marker is empty, its pose will be interpreted as
        /// relative to the pose of the parent interactive marker.
        /// <para>(originally defined as: <c><![CDATA[visualization_msgs/msg/Marker[] markers]]></c>)</para>
        /// </param>
        /// <param name='independentMarkerOrientation'>
        /// In VIEW_FACING mode, set this to true if you don't want the markers
        /// to be aligned with the camera view point. The markers will show up
        /// as in INHERIT mode.
        /// <para>(originally defined as: <c><![CDATA[bool independent_marker_orientation]]></c>)</para>
        /// </param>
        /// <param name='description'>
        /// Short description (< 40 characters) of what this control does,
        /// e.g. "Move the robot".
        /// Default: A generic description based on the interaction mode
        /// <para>(originally defined as: <c><![CDATA[string description]]></c>)</para>
        /// </param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public InteractiveMarkerControl(
            string @name = "",
            global::Handling_Service.Core.Ros2.Interfaces.Geometry.Quaternion? @orientation = null,
            byte @orientationMode = 0,
            byte @interactionMode = 0,
            bool @alwaysVisible = false,
            global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker[]? @markers = null,
            bool @independentMarkerOrientation = false,
            string @description = ""
        )
        {
            Name = @name;
            Orientation = @orientation ?? new global::Handling_Service.Core.Ros2.Interfaces.Geometry.Quaternion();
            OrientationMode = @orientationMode;
            InteractionMode = @interactionMode;
            AlwaysVisible = @alwaysVisible;
            Markers = @markers ?? global::System.Array.Empty<global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker>();
            IndependentMarkerOrientation = @independentMarkerOrientation;
            Description = @description;
        }
        
        
        /// <summary>
        /// Create a new instance of <see cref="InteractiveMarkerControl"/>, and copy its data from the specified <see cref="Priv"/> structure.
        /// </summary>
        /// <param name="priv">The <see cref="Priv"/> structure to be copied from.</param>
        /// <param name="textEncoding">Text encoding of the strings in the <see cref="Priv"/> structure and its containing structures, if any.</param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public InteractiveMarkerControl(in Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Name = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Name.AsSpan(), textEncoding);
            this.Orientation = new global::Handling_Service.Core.Ros2.Interfaces.Geometry.Quaternion(in priv.Orientation, textEncoding);
            this.OrientationMode = priv.OrientationMode;
            this.InteractionMode = priv.InteractionMode;
            this.AlwaysVisible = priv.AlwaysVisible;
        
            this.Markers = new global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker[priv.Markers.Size];
            var Markers_span = priv.Markers.AsSpan();
            for (int __i = 0; __i < this.Markers.Length; __i++)
            {
                this.Markers[__i] = new global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker(in Markers_span[__i], textEncoding);
            }
        
            this.IndependentMarkerOrientation = priv.IndependentMarkerOrientation;
            this.Description = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.Description.AsSpan(), textEncoding);
        }
        
        
        /// <summary>
        /// Orientation mode: controls how orientation changes.
        /// INHERIT: Follow orientation of interactive marker
        /// FIXED: Keep orientation fixed at initial state
        /// VIEW_FACING: Align y-z plane with screen (x: forward, y:left, z:up).
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 INHERIT = 0]]></c>
        /// </remarks>
        public const byte INHERIT = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIXED = 1]]></c>
        /// </summary>
        public const byte FIXED = 1;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 VIEW_FACING = 2]]></c>
        /// </summary>
        public const byte VIEW_FACING = 2;
        
        /// <summary>
        /// Interaction mode for this control
        /// 
        /// NONE: This control is only meant for visualization; no context menu.
        /// MENU: Like NONE, but right-click menu is active.
        /// BUTTON: Element can be left-clicked.
        /// MOVE_AXIS: Translate along local x-axis.
        /// MOVE_PLANE: Translate in local y-z plane.
        /// ROTATE_AXIS: Rotate around local x-axis.
        /// MOVE_ROTATE: Combines MOVE_PLANE and ROTATE_AXIS.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 NONE = 0]]></c>
        /// </remarks>
        public const byte NONE = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MENU = 1]]></c>
        /// </summary>
        public const byte MENU = 1;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 BUTTON = 2]]></c>
        /// </summary>
        public const byte BUTTON = 2;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOVE_AXIS = 3]]></c>
        /// </summary>
        public const byte MOVE_AXIS = 3;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOVE_PLANE = 4]]></c>
        /// </summary>
        public const byte MOVE_PLANE = 4;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 ROTATE_AXIS = 5]]></c>
        /// </summary>
        public const byte ROTATE_AXIS = 5;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOVE_ROTATE = 6]]></c>
        /// </summary>
        public const byte MOVE_ROTATE = 6;
        
        /// <summary>
        /// "3D" interaction modes work with the mouse+SHIFT+CTRL or with 3D cursors.
        /// MOVE_3D: Translate freely in 3D space.
        /// ROTATE_3D: Rotate freely in 3D space about the origin of parent frame.
        /// MOVE_ROTATE_3D: Full 6-DOF freedom of translation and rotation about the cursor origin.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 MOVE_3D = 7]]></c>
        /// </remarks>
        public const byte MOVE_3D = 7;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 ROTATE_3D = 8]]></c>
        /// </summary>
        public const byte ROTATE_3D = 8;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOVE_ROTATE_3D = 9]]></c>
        /// </summary>
        public const byte MOVE_ROTATE_3D = 9;
        
        /// <summary>
        /// Identifying string for this control.
        /// You need to assign a unique value to this to receive feedback from the GUI
        /// on what actions the user performs on this control (e.g. a button click).
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string name]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string Name { get; set; }
        
        /// <summary>
        /// Defines the local coordinate frame (relative to the pose of the parent
        /// interactive marker) in which is being rotated and translated.
        /// Default: Identity
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Quaternion orientation]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Core.Ros2.Interfaces.Geometry.Quaternion Orientation { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 orientation_mode]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public byte OrientationMode { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 interaction_mode]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public byte InteractionMode { get; set; }
        
        /// <summary>
        /// If true, the contained markers will also be visible
        /// when the gui is not in interactive mode.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[bool always_visible]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public bool AlwaysVisible { get; set; }
        
        /// <summary>
        /// Markers to be displayed as custom visual representation.
        /// Leave this empty to use the default control handles.
        /// 
        /// Note:
        /// - The markers can be defined in an arbitrary coordinate frame,
        /// but will be transformed into the local frame of the interactive marker.
        /// - If the header of a marker is empty, its pose will be interpreted as
        /// relative to the pose of the parent interactive marker.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[visualization_msgs/msg/Marker[] markers]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker[] Markers { get; set; }
        
        /// <summary>
        /// In VIEW_FACING mode, set this to true if you don't want the markers
        /// to be aligned with the camera view point. The markers will show up
        /// as in INHERIT mode.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[bool independent_marker_orientation]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public bool IndependentMarkerOrientation { get; set; }
        
        /// <summary>
        /// Short description (< 40 characters) of what this control does,
        /// e.g. "Move the robot".
        /// Default: A generic description based on the interaction mode
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string description]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string Description { get; set; }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(nint data, global::System.Text.Encoding textEncoding)
        {
            WriteTo(ref global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(ref Priv priv, global::System.Text.Encoding textEncoding)
        {
            priv.Name.CopyFrom(this.Name, textEncoding);
            this.Orientation.WriteTo(ref priv.Orientation, textEncoding);
            priv.OrientationMode = this.OrientationMode;
            priv.InteractionMode = this.InteractionMode;
            priv.AlwaysVisible = this.AlwaysVisible;
            
            priv.Markers = new global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker.PrivSequence(this.Markers.Length);
            var Markers_span = priv.Markers.AsSpan();
            for (int __i = 0; __i < this.Markers.Length; __i++)
            {
                this.Markers[__i].WriteTo(ref Markers_span[__i], textEncoding);
            }
            
            priv.IndependentMarkerOrientation = this.IndependentMarkerOrientation;
            priv.Description.CopyFrom(this.Description, textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.IMessage CreateFrom(nint data, global::System.Text.Encoding textEncoding)
        {
            return new InteractiveMarkerControl(in global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static nint UnsafeCreate()
        {
            return new(Priv.Create());
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeDestroy(nint data)
        {
            Priv.Destroy((Priv*)data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitialize(nint data)
        {
            return Priv.TryInitialize(out System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalize(nint data)
        {
            Priv.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitializeSequence(int size, nint data)
        {
            return PrivSequence.TryInitialize(size, out System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalizeSequence(nint data)
        {
            PrivSequence.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        /// <summary>
        /// Represents a control that is to be displayed together with an interactive marker
        /// </summary>
        /// <remarks>
        /// Blittable native structure for <c>visualization_msgs/msg/InteractiveMarkerControl</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct Priv : global::System.IEquatable<Priv>, global::System.IDisposable
        {
            /// <summary>
            /// Identifying string for this control.
            /// You need to assign a unique value to this to receive feedback from the GUI
            /// on what actions the user performs on this control (e.g. a button click).
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string name]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString Name;
            
            /// <summary>
            /// Defines the local coordinate frame (relative to the pose of the parent
            /// interactive marker) in which is being rotated and translated.
            /// Default: Identity
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Quaternion orientation]]></c>
            /// </remarks>
            public global::Handling_Service.Core.Ros2.Interfaces.Geometry.Quaternion.Priv Orientation;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[uint8 orientation_mode]]></c>
            /// </summary>
            public byte OrientationMode;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[uint8 interaction_mode]]></c>
            /// </summary>
            public byte InteractionMode;
            
            /// <summary>
            /// If true, the contained markers will also be visible
            /// when the gui is not in interactive mode.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[bool always_visible]]></c>
            /// </remarks>
            public bool AlwaysVisible;
            
            /// <summary>
            /// Markers to be displayed as custom visual representation.
            /// Leave this empty to use the default control handles.
            /// 
            /// Note:
            /// - The markers can be defined in an arbitrary coordinate frame,
            /// but will be transformed into the local frame of the interactive marker.
            /// - If the header of a marker is empty, its pose will be interpreted as
            /// relative to the pose of the parent interactive marker.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[visualization_msgs/msg/Marker[] markers]]></c>
            /// </remarks>
            public global::Handling_Service.Core.Ros2.Interfaces.Visualization.Marker.PrivSequence Markers;
            
            /// <summary>
            /// In VIEW_FACING mode, set this to true if you don't want the markers
            /// to be aligned with the camera view point. The markers will show up
            /// as in INHERIT mode.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[bool independent_marker_orientation]]></c>
            /// </remarks>
            public bool IndependentMarkerOrientation;
            
            /// <summary>
            /// Short description (< 40 characters) of what this control does,
            /// e.g. "Move the robot".
            /// Default: A generic description based on the interaction mode
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string description]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString Description;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv()
            {
                ThrowIfNonSuccess(TryInitialize(out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(in Priv src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv* src)
            {
                fixed (Priv* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in Priv input, out Priv output)
            {
                fixed (Priv* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(Priv other)
            {
                return Priv.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is Priv s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                var __hashCode = new global::System.HashCode();
                __hashCode.Add(this.Name);
                __hashCode.Add(this.Orientation);
                __hashCode.Add(this.OrientationMode);
                __hashCode.Add(this.InteractionMode);
                __hashCode.Add(this.AlwaysVisible);
                __hashCode.Add(this.Markers);
                __hashCode.Add(this.IndependentMarkerOrientation);
                __hashCode.Add(this.Description);
                return __hashCode.ToHashCode();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(Priv lhs, Priv rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(Priv lhs, Priv rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static Priv* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__create")]
                static extern Priv* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(Priv* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__destroy")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(out Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    return _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__init")]
                static extern bool _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__fini")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in Priv lhs, in Priv rhs)
            {
                fixed (Priv* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__are_qual")]
                static extern bool _PInvoke(Priv* lhs, Priv* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(Priv* input, Priv* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__copy")]
                static extern bool _PInvoke(Priv* input, Priv* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Core.Ros2.Interfaces.Visualization.InteractiveMarkerControl.Priv.{caller}'.");
                }
            }
        }
        
        /// <summary>
        /// Represents a control that is to be displayed together with an interactive marker
        /// </summary>
        /// <remarks>
        /// Blittable native sequence structure for <c>visualization_msgs/msg/InteractiveMarkerControl</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct PrivSequence : global::System.IEquatable<PrivSequence>, global::System.IDisposable
        {
            private Priv* __data;
            
            private nuint __size;
            
            private nuint __capacity;
            
            public int Size => (int)__size;
            
            public int Capcacity => (int)__capacity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence()
                : this(0)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(int size)
            {
                ThrowIfNonSuccess(TryInitialize(size, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(in PrivSequence src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(System.ReadOnlySpan<Priv> src)
                : this(src.Length)
            {
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public System.Span<Priv> AsSpan()
            {
                return new(__data, Size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(System.ReadOnlySpan<Priv> src)
            {
                Finalize(ref this);
                ThrowIfNonSuccess(TryInitialize(src.Length, out this));
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence* src)
            {
                fixed (PrivSequence* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in PrivSequence input, out PrivSequence output)
            {
                fixed (PrivSequence* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(PrivSequence other)
            {
                return PrivSequence.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is PrivSequence s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                return global::System.HashCode.Combine((nint)__data, __size, __capacity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(PrivSequence lhs, PrivSequence rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(PrivSequence lhs, PrivSequence rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static PrivSequence* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__create")]
                static extern PrivSequence* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(PrivSequence* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__destroy")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(int size, out PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    return _PInvoke(pMsg, (uint)size);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__init")]
                static extern bool _PInvoke(PrivSequence* msg, nuint size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__fini")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in PrivSequence lhs, in PrivSequence rhs)
            {
                fixed (PrivSequence* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__are_qual")]
                static extern bool _PInvoke(PrivSequence* lhs, PrivSequence* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(PrivSequence* input, PrivSequence* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerControl__Sequence__copy")]
                static extern bool _PInvoke(PrivSequence* input, PrivSequence* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Core.Ros2.Interfaces.Visualization.InteractiveMarkerControl.PrivSequence.{caller}'.");
                }
            }
        }
    }
}
