//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ros2cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

#nullable enable

namespace Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization
{
    /// <summary>
    /// Time/frame info.
    /// </summary>
    /// <remarks>
    /// Message interface definition for <c>visualization_msgs/msg/InteractiveMarkerFeedback</c>.
    /// </remarks>
    [global::Rosidl.Runtime.TypeSupportAttribute("visualization_msgs/msg/InteractiveMarkerFeedback")]
    public unsafe partial class InteractiveMarkerFeedback : global::Rosidl.Runtime.IMessage
    {
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static string TypeSupportName => "visualization_msgs/msg/InteractiveMarkerFeedback";
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.TypeSupportHandle GetTypeSupportHandle()
        {
            return new global::Rosidl.Runtime.TypeSupportHandle(_PInvoke(), global::Rosidl.Runtime.HandleType.Message);
            
            [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
            [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_typesupport_c", EntryPoint = "rosidl_typesupport_c__get_message_type_support_handle__visualization_msgs__msg__InteractiveMarkerFeedback")]
            static extern nint _PInvoke();
        }
        
        /// <summary>
        /// Create a new instance of <see cref="InteractiveMarkerFeedback"/> with fields initialized to specified values.
        /// </summary>
        /// <param name='header'>
        /// Time/frame info.
        /// <para>(originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>)</para>
        /// </param>
        /// <param name='clientId'>
        /// Identifying string. Must be unique in the topic namespace.
        /// <para>(originally defined as: <c><![CDATA[string client_id]]></c>)</para>
        /// </param>
        /// <param name='markerName'>
        /// Specifies which interactive marker and control this message refers to
        /// <para>(originally defined as: <c><![CDATA[string marker_name]]></c>)</para>
        /// </param>
        /// <param name='controlName'>
        /// Originally defined as: <c><![CDATA[string control_name]]></c>
        /// </param>
        /// <param name='eventType'>
        /// Originally defined as: <c><![CDATA[uint8 event_type]]></c>
        /// </param>
        /// <param name='pose'>
        /// Current pose of the marker
        /// Note: Has to be valid for all feedback types.
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>)</para>
        /// </param>
        /// <param name='menuEntryId'>
        /// Contains the ID of the selected menu entry
        /// Only valid for MENU_SELECT events.
        /// <para>(originally defined as: <c><![CDATA[uint32 menu_entry_id]]></c>)</para>
        /// </param>
        /// <param name='mousePoint'>
        /// If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
        /// may contain the 3 dimensional position of the event on the
        /// control.  If it does, mouse_point_valid will be true.  mouse_point
        /// will be relative to the frame listed in the header.
        /// <para>(originally defined as: <c><![CDATA[geometry_msgs/msg/Point mouse_point]]></c>)</para>
        /// </param>
        /// <param name='mousePointValid'>
        /// Originally defined as: <c><![CDATA[bool mouse_point_valid]]></c>
        /// </param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public InteractiveMarkerFeedback(
            global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header? @header = null,
            string @clientId = "",
            string @markerName = "",
            string @controlName = "",
            byte @eventType = 0,
            global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose? @pose = null,
            uint @menuEntryId = 0,
            global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point? @mousePoint = null,
            bool @mousePointValid = false
        )
        {
            Header = @header ?? new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header();
            ClientId = @clientId;
            MarkerName = @markerName;
            ControlName = @controlName;
            EventType = @eventType;
            Pose = @pose ?? new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose();
            MenuEntryId = @menuEntryId;
            MousePoint = @mousePoint ?? new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point();
            MousePointValid = @mousePointValid;
        }
        
        
        /// <summary>
        /// Create a new instance of <see cref="InteractiveMarkerFeedback"/>, and copy its data from the specified <see cref="Priv"/> structure.
        /// </summary>
        /// <param name="priv">The <see cref="Priv"/> structure to be copied from.</param>
        /// <param name="textEncoding">Text encoding of the strings in the <see cref="Priv"/> structure and its containing structures, if any.</param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public InteractiveMarkerFeedback(in Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Header = new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header(in priv.Header, textEncoding);
            this.ClientId = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.ClientId.AsSpan(), textEncoding);
            this.MarkerName = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.MarkerName.AsSpan(), textEncoding);
            this.ControlName = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.ControlName.AsSpan(), textEncoding);
            this.EventType = priv.EventType;
            this.Pose = new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose(in priv.Pose, textEncoding);
            this.MenuEntryId = priv.MenuEntryId;
            this.MousePoint = new global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point(in priv.MousePoint, textEncoding);
            this.MousePointValid = priv.MousePointValid;
        }
        
        
        /// <summary>
        /// Type of the event
        /// KEEP_ALIVE: sent while dragging to keep up control of the marker
        /// MENU_SELECT: a menu entry has been selected
        /// BUTTON_CLICK: a button control has been clicked
        /// POSE_UPDATE: the pose has been changed using one of the controls
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 KEEP_ALIVE = 0]]></c>
        /// </remarks>
        public const byte KEEP_ALIVE = 0;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 POSE_UPDATE = 1]]></c>
        /// </summary>
        public const byte POSE_UPDATE = 1;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MENU_SELECT = 2]]></c>
        /// </summary>
        public const byte MENU_SELECT = 2;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 BUTTON_CLICK = 3]]></c>
        /// </summary>
        public const byte BUTTON_CLICK = 3;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOUSE_DOWN = 4]]></c>
        /// </summary>
        public const byte MOUSE_DOWN = 4;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 MOUSE_UP = 5]]></c>
        /// </summary>
        public const byte MOUSE_UP = 5;
        
        /// <summary>
        /// Time/frame info.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header Header { get; set; }
        
        /// <summary>
        /// Identifying string. Must be unique in the topic namespace.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string client_id]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string ClientId { get; set; }
        
        /// <summary>
        /// Specifies which interactive marker and control this message refers to
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string marker_name]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string MarkerName { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[string control_name]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string ControlName { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 event_type]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public byte EventType { get; set; }
        
        /// <summary>
        /// Current pose of the marker
        /// Note: Has to be valid for all feedback types.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose Pose { get; set; }
        
        /// <summary>
        /// Contains the ID of the selected menu entry
        /// Only valid for MENU_SELECT events.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint32 menu_entry_id]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public uint MenuEntryId { get; set; }
        
        /// <summary>
        /// If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
        /// may contain the 3 dimensional position of the event on the
        /// control.  If it does, mouse_point_valid will be true.  mouse_point
        /// will be relative to the frame listed in the header.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Point mouse_point]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point MousePoint { get; set; }
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[bool mouse_point_valid]]></c>
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public bool MousePointValid { get; set; }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(nint data, global::System.Text.Encoding textEncoding)
        {
            WriteTo(ref global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(ref Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.Header.WriteTo(ref priv.Header, textEncoding);
            priv.ClientId.CopyFrom(this.ClientId, textEncoding);
            priv.MarkerName.CopyFrom(this.MarkerName, textEncoding);
            priv.ControlName.CopyFrom(this.ControlName, textEncoding);
            priv.EventType = this.EventType;
            this.Pose.WriteTo(ref priv.Pose, textEncoding);
            priv.MenuEntryId = this.MenuEntryId;
            this.MousePoint.WriteTo(ref priv.MousePoint, textEncoding);
            priv.MousePointValid = this.MousePointValid;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.IMessage CreateFrom(nint data, global::System.Text.Encoding textEncoding)
        {
            return new InteractiveMarkerFeedback(in global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static nint UnsafeCreate()
        {
            return new(Priv.Create());
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeDestroy(nint data)
        {
            Priv.Destroy((Priv*)data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitialize(nint data)
        {
            return Priv.TryInitialize(out System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalize(nint data)
        {
            Priv.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitializeSequence(int size, nint data)
        {
            return PrivSequence.TryInitialize(size, out System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalizeSequence(nint data)
        {
            PrivSequence.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        /// <summary>
        /// Time/frame info.
        /// </summary>
        /// <remarks>
        /// Blittable native structure for <c>visualization_msgs/msg/InteractiveMarkerFeedback</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct Priv : global::System.IEquatable<Priv>, global::System.IDisposable
        {
            /// <summary>
            /// Time/frame info.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[std_msgs/msg/Header header]]></c>
            /// </remarks>
            public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Std.Header.Priv Header;
            
            /// <summary>
            /// Identifying string. Must be unique in the topic namespace.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string client_id]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString ClientId;
            
            /// <summary>
            /// Specifies which interactive marker and control this message refers to
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string marker_name]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString MarkerName;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[string control_name]]></c>
            /// </summary>
            public global::Rosidl.Runtime.Interop.CString ControlName;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[uint8 event_type]]></c>
            /// </summary>
            public byte EventType;
            
            /// <summary>
            /// Current pose of the marker
            /// Note: Has to be valid for all feedback types.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Pose pose]]></c>
            /// </remarks>
            public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Pose.Priv Pose;
            
            /// <summary>
            /// Contains the ID of the selected menu entry
            /// Only valid for MENU_SELECT events.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[uint32 menu_entry_id]]></c>
            /// </remarks>
            public uint MenuEntryId;
            
            /// <summary>
            /// If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point
            /// may contain the 3 dimensional position of the event on the
            /// control.  If it does, mouse_point_valid will be true.  mouse_point
            /// will be relative to the frame listed in the header.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[geometry_msgs/msg/Point mouse_point]]></c>
            /// </remarks>
            public global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Geometry.Point.Priv MousePoint;
            
            /// <summary>
            /// Originally defined as: <c><![CDATA[bool mouse_point_valid]]></c>
            /// </summary>
            public bool MousePointValid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv()
            {
                ThrowIfNonSuccess(TryInitialize(out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(in Priv src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv* src)
            {
                fixed (Priv* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in Priv input, out Priv output)
            {
                fixed (Priv* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(Priv other)
            {
                return Priv.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is Priv s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                var __hashCode = new global::System.HashCode();
                __hashCode.Add(this.Header);
                __hashCode.Add(this.ClientId);
                __hashCode.Add(this.MarkerName);
                __hashCode.Add(this.ControlName);
                __hashCode.Add(this.EventType);
                __hashCode.Add(this.Pose);
                __hashCode.Add(this.MenuEntryId);
                __hashCode.Add(this.MousePoint);
                __hashCode.Add(this.MousePointValid);
                return __hashCode.ToHashCode();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(Priv lhs, Priv rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(Priv lhs, Priv rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static Priv* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__create")]
                static extern Priv* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(Priv* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__destroy")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(out Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    return _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__init")]
                static extern bool _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__fini")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in Priv lhs, in Priv rhs)
            {
                fixed (Priv* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__are_qual")]
                static extern bool _PInvoke(Priv* lhs, Priv* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(Priv* input, Priv* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__copy")]
                static extern bool _PInvoke(Priv* input, Priv* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.InteractiveMarkerFeedback.Priv.{caller}'.");
                }
            }
        }
        
        /// <summary>
        /// Time/frame info.
        /// </summary>
        /// <remarks>
        /// Blittable native sequence structure for <c>visualization_msgs/msg/InteractiveMarkerFeedback</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct PrivSequence : global::System.IEquatable<PrivSequence>, global::System.IDisposable
        {
            private Priv* __data;
            
            private nuint __size;
            
            private nuint __capacity;
            
            public int Size => (int)__size;
            
            public int Capcacity => (int)__capacity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence()
                : this(0)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(int size)
            {
                ThrowIfNonSuccess(TryInitialize(size, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(in PrivSequence src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(System.ReadOnlySpan<Priv> src)
                : this(src.Length)
            {
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public System.Span<Priv> AsSpan()
            {
                return new(__data, Size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(System.ReadOnlySpan<Priv> src)
            {
                Finalize(ref this);
                ThrowIfNonSuccess(TryInitialize(src.Length, out this));
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence* src)
            {
                fixed (PrivSequence* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in PrivSequence input, out PrivSequence output)
            {
                fixed (PrivSequence* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(PrivSequence other)
            {
                return PrivSequence.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is PrivSequence s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                return global::System.HashCode.Combine((nint)__data, __size, __capacity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(PrivSequence lhs, PrivSequence rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(PrivSequence lhs, PrivSequence rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static PrivSequence* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__create")]
                static extern PrivSequence* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(PrivSequence* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__destroy")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(int size, out PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    return _PInvoke(pMsg, (uint)size);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__init")]
                static extern bool _PInvoke(PrivSequence* msg, nuint size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__fini")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in PrivSequence lhs, in PrivSequence rhs)
            {
                fixed (PrivSequence* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__are_qual")]
                static extern bool _PInvoke(PrivSequence* lhs, PrivSequence* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(PrivSequence* input, PrivSequence* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("visualization_msgs__rosidl_generator_c", EntryPoint = "visualization_msgs__msg__InteractiveMarkerFeedback__Sequence__copy")]
                static extern bool _PInvoke(PrivSequence* input, PrivSequence* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Leuze_AGV_Handling_Service.Infrastructure.Ros2.Ros2CommonMessages.Visualization.InteractiveMarkerFeedback.PrivSequence.{caller}'.");
                }
            }
        }
    }
}
