//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by ros2cs.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

#nullable enable

namespace Handling_Service.Core.Ros2.Interfaces.TypeDescription
{
    /// <summary>
    /// Represents the type of a field and related meta-data.
    /// </summary>
    /// <remarks>
    /// Message interface definition for <c>type_description_interfaces/msg/FieldType</c>.
    /// </remarks>
    [global::Rosidl.Runtime.TypeSupportAttribute("type_description_interfaces/msg/FieldType")]
    public unsafe partial class FieldType : global::Rosidl.Runtime.IMessage
    {
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static string TypeSupportName => "type_description_interfaces/msg/FieldType";
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.TypeSupportHandle GetTypeSupportHandle()
        {
            return new global::Rosidl.Runtime.TypeSupportHandle(_PInvoke(), global::Rosidl.Runtime.HandleType.Message);
            
            [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
            [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_typesupport_c", EntryPoint = "rosidl_typesupport_c__get_message_type_support_handle__type_description_interfaces__msg__FieldType")]
            static extern nint _PInvoke();
        }
        
        /// <summary>
        /// Create a new instance of <see cref="FieldType"/> with fields initialized to specified values.
        /// </summary>
        /// <param name='typeId'>
        /// Identifying number for the type of the field, using one of the above constants.
        /// <para>(originally defined as: <c><![CDATA[uint8 type_id 0]]></c>)</para>
        /// </param>
        /// <param name='capacity'>
        /// Only used when the type is an array or a bounded sequence.
        /// In the case of an array, this is the fixed capacity of the array.
        /// In the case of a bounded sequence, this is the maximum capacity of the sequence.
        /// In all other cases this field is unused.
        /// <para>(originally defined as: <c><![CDATA[uint64 capacity]]></c>)</para>
        /// </param>
        /// <param name='stringCapacity'>
        /// Only used when the type is a fixed or bounded string/wstring, or a array/sequence of those.
        /// In the case of a fixed string/wstring, it is the fixed length of the string.
        /// In the case of a bounded string/wstring, it is the maximum capacity of the string.
        /// In the case of an array/sequence of fixed string/wstring, it is the fixed length of the strings.
        /// In the case of an array/sequence of bounded string/wstring, it is the maximum capacity of the strings.
        /// It is not currently possible to have different string capacities per element in the array/sequence.
        /// <para>(originally defined as: <c><![CDATA[uint64 string_capacity]]></c>)</para>
        /// </param>
        /// <param name='nestedTypeName'>
        /// Only used when the type is a nested type or array/sequence of nested types.
        /// This is limited to 255 characters.
        /// TODO(wjwwood): this 255 character limit was chosen due to this being the limit
        /// for DDSI-RTPS based middlewares, which is the most commonly used right now.
        /// We lack a ROS 2 specific limit in our design documents, but we should update
        /// this and/or link to the design doc when that is available.
        /// <para>(originally defined as: <c><![CDATA[string<=255 nested_type_name]]></c>)</para>
        /// </param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public FieldType(
            byte @typeId = 0,
            ulong @capacity = 0,
            ulong @stringCapacity = 0,
            string @nestedTypeName = ""
        )
        {
            TypeId = @typeId;
            Capacity = @capacity;
            StringCapacity = @stringCapacity;
            NestedTypeName = @nestedTypeName;
        }
        
        
        /// <summary>
        /// Create a new instance of <see cref="FieldType"/>, and copy its data from the specified <see cref="Priv"/> structure.
        /// </summary>
        /// <param name="priv">The <see cref="Priv"/> structure to be copied from.</param>
        /// <param name="textEncoding">Text encoding of the strings in the <see cref="Priv"/> structure and its containing structures, if any.</param>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public FieldType(in Priv priv, global::System.Text.Encoding textEncoding)
        {
            this.TypeId = priv.TypeId;
            this.Capacity = priv.Capacity;
            this.StringCapacity = priv.StringCapacity;
            this.NestedTypeName = global::Rosidl.Runtime.Interop.StringMarshal.CreatePooledString(priv.NestedTypeName.AsSpan(), textEncoding);
        }
        
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_NOT_SET = 0]]></c>
        /// </summary>
        public const byte FIELD_TYPE_NOT_SET = 0;
        
        /// <summary>
        /// Nested type defined in other .msg/.idl files.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_NESTED_TYPE = 1]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_NESTED_TYPE = 1;
        
        /// <summary>
        /// Integer Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT8 = 2]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_INT8 = 2;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT8 = 3]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT8 = 3;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT16 = 4]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT16 = 4;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT16 = 5]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT16 = 5;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT32 = 6]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT32 = 6;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT32 = 7]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT32 = 7;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT64 = 8]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT64 = 8;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT64 = 9]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT64 = 9;
        
        /// <summary>
        /// Floating-Point Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FLOAT = 10]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_FLOAT = 10;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_DOUBLE = 11]]></c>
        /// </summary>
        public const byte FIELD_TYPE_DOUBLE = 11;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_LONG_DOUBLE = 12]]></c>
        /// </summary>
        public const byte FIELD_TYPE_LONG_DOUBLE = 12;
        
        /// <summary>
        /// Char and WChar Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_CHAR = 13]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_CHAR = 13;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WCHAR = 14]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WCHAR = 14;
        
        /// <summary>
        /// Boolean Type
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOOLEAN = 15]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_BOOLEAN = 15;
        
        /// <summary>
        /// Byte/Octet Type
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BYTE = 16]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_BYTE = 16;
        
        /// <summary>
        /// String Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_STRING = 17]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_STRING = 17;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WSTRING = 18]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WSTRING = 18;
        
        /// <summary>
        /// Fixed String Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_STRING = 19]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_FIXED_STRING = 19;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_WSTRING = 20]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_WSTRING = 20;
        
        /// <summary>
        /// Bounded String Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_STRING = 21]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_BOUNDED_STRING = 21;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_WSTRING = 22]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_WSTRING = 22;
        
        /// <summary>
        /// Fixed Sized Array Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_NESTED_TYPE_ARRAY = 49]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_NESTED_TYPE_ARRAY = 49;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT8_ARRAY = 50]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT8_ARRAY = 50;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT8_ARRAY = 51]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT8_ARRAY = 51;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT16_ARRAY = 52]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT16_ARRAY = 52;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT16_ARRAY = 53]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT16_ARRAY = 53;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT32_ARRAY = 54]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT32_ARRAY = 54;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT32_ARRAY = 55]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT32_ARRAY = 55;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT64_ARRAY = 56]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT64_ARRAY = 56;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT64_ARRAY = 57]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT64_ARRAY = 57;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FLOAT_ARRAY = 58]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FLOAT_ARRAY = 58;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_DOUBLE_ARRAY = 59]]></c>
        /// </summary>
        public const byte FIELD_TYPE_DOUBLE_ARRAY = 59;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_LONG_DOUBLE_ARRAY = 60]]></c>
        /// </summary>
        public const byte FIELD_TYPE_LONG_DOUBLE_ARRAY = 60;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_CHAR_ARRAY = 61]]></c>
        /// </summary>
        public const byte FIELD_TYPE_CHAR_ARRAY = 61;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WCHAR_ARRAY = 62]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WCHAR_ARRAY = 62;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOOLEAN_ARRAY = 63]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOOLEAN_ARRAY = 63;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BYTE_ARRAY = 64]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BYTE_ARRAY = 64;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_STRING_ARRAY = 65]]></c>
        /// </summary>
        public const byte FIELD_TYPE_STRING_ARRAY = 65;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WSTRING_ARRAY = 66]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WSTRING_ARRAY = 66;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_STRING_ARRAY = 67]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_STRING_ARRAY = 67;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_WSTRING_ARRAY = 68]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_WSTRING_ARRAY = 68;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_STRING_ARRAY = 69]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_STRING_ARRAY = 69;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_WSTRING_ARRAY = 70]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_WSTRING_ARRAY = 70;
        
        /// <summary>
        /// Bounded Sequence Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_NESTED_TYPE_BOUNDED_SEQUENCE = 97]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_NESTED_TYPE_BOUNDED_SEQUENCE = 97;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT8_BOUNDED_SEQUENCE = 98]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT8_BOUNDED_SEQUENCE = 98;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT8_BOUNDED_SEQUENCE = 99]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT8_BOUNDED_SEQUENCE = 99;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT16_BOUNDED_SEQUENCE = 100]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT16_BOUNDED_SEQUENCE = 100;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT16_BOUNDED_SEQUENCE = 101]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT16_BOUNDED_SEQUENCE = 101;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT32_BOUNDED_SEQUENCE = 102]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT32_BOUNDED_SEQUENCE = 102;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT32_BOUNDED_SEQUENCE = 103]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT32_BOUNDED_SEQUENCE = 103;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT64_BOUNDED_SEQUENCE = 104]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT64_BOUNDED_SEQUENCE = 104;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT64_BOUNDED_SEQUENCE = 105]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT64_BOUNDED_SEQUENCE = 105;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FLOAT_BOUNDED_SEQUENCE = 106]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FLOAT_BOUNDED_SEQUENCE = 106;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_DOUBLE_BOUNDED_SEQUENCE = 107]]></c>
        /// </summary>
        public const byte FIELD_TYPE_DOUBLE_BOUNDED_SEQUENCE = 107;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_LONG_DOUBLE_BOUNDED_SEQUENCE = 108]]></c>
        /// </summary>
        public const byte FIELD_TYPE_LONG_DOUBLE_BOUNDED_SEQUENCE = 108;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_CHAR_BOUNDED_SEQUENCE = 109]]></c>
        /// </summary>
        public const byte FIELD_TYPE_CHAR_BOUNDED_SEQUENCE = 109;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WCHAR_BOUNDED_SEQUENCE = 110]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WCHAR_BOUNDED_SEQUENCE = 110;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOOLEAN_BOUNDED_SEQUENCE = 111]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOOLEAN_BOUNDED_SEQUENCE = 111;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BYTE_BOUNDED_SEQUENCE = 112]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BYTE_BOUNDED_SEQUENCE = 112;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_STRING_BOUNDED_SEQUENCE = 113]]></c>
        /// </summary>
        public const byte FIELD_TYPE_STRING_BOUNDED_SEQUENCE = 113;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WSTRING_BOUNDED_SEQUENCE = 114]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WSTRING_BOUNDED_SEQUENCE = 114;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_STRING_BOUNDED_SEQUENCE = 115]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_STRING_BOUNDED_SEQUENCE = 115;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_WSTRING_BOUNDED_SEQUENCE = 116]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_WSTRING_BOUNDED_SEQUENCE = 116;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_STRING_BOUNDED_SEQUENCE = 117]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_STRING_BOUNDED_SEQUENCE = 117;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_WSTRING_BOUNDED_SEQUENCE = 118]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_WSTRING_BOUNDED_SEQUENCE = 118;
        
        /// <summary>
        /// Unbounded Sequence Types
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_NESTED_TYPE_UNBOUNDED_SEQUENCE = 145]]></c>
        /// </remarks>
        public const byte FIELD_TYPE_NESTED_TYPE_UNBOUNDED_SEQUENCE = 145;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT8_UNBOUNDED_SEQUENCE = 146]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT8_UNBOUNDED_SEQUENCE = 146;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT8_UNBOUNDED_SEQUENCE = 147]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT8_UNBOUNDED_SEQUENCE = 147;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT16_UNBOUNDED_SEQUENCE = 148]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT16_UNBOUNDED_SEQUENCE = 148;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT16_UNBOUNDED_SEQUENCE = 149]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT16_UNBOUNDED_SEQUENCE = 149;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT32_UNBOUNDED_SEQUENCE = 150]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT32_UNBOUNDED_SEQUENCE = 150;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT32_UNBOUNDED_SEQUENCE = 151]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT32_UNBOUNDED_SEQUENCE = 151;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_INT64_UNBOUNDED_SEQUENCE = 152]]></c>
        /// </summary>
        public const byte FIELD_TYPE_INT64_UNBOUNDED_SEQUENCE = 152;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_UINT64_UNBOUNDED_SEQUENCE = 153]]></c>
        /// </summary>
        public const byte FIELD_TYPE_UINT64_UNBOUNDED_SEQUENCE = 153;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FLOAT_UNBOUNDED_SEQUENCE = 154]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FLOAT_UNBOUNDED_SEQUENCE = 154;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_DOUBLE_UNBOUNDED_SEQUENCE = 155]]></c>
        /// </summary>
        public const byte FIELD_TYPE_DOUBLE_UNBOUNDED_SEQUENCE = 155;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_LONG_DOUBLE_UNBOUNDED_SEQUENCE = 156]]></c>
        /// </summary>
        public const byte FIELD_TYPE_LONG_DOUBLE_UNBOUNDED_SEQUENCE = 156;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_CHAR_UNBOUNDED_SEQUENCE = 157]]></c>
        /// </summary>
        public const byte FIELD_TYPE_CHAR_UNBOUNDED_SEQUENCE = 157;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WCHAR_UNBOUNDED_SEQUENCE = 158]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WCHAR_UNBOUNDED_SEQUENCE = 158;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOOLEAN_UNBOUNDED_SEQUENCE = 159]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOOLEAN_UNBOUNDED_SEQUENCE = 159;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BYTE_UNBOUNDED_SEQUENCE = 160]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BYTE_UNBOUNDED_SEQUENCE = 160;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_STRING_UNBOUNDED_SEQUENCE = 161]]></c>
        /// </summary>
        public const byte FIELD_TYPE_STRING_UNBOUNDED_SEQUENCE = 161;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_WSTRING_UNBOUNDED_SEQUENCE = 162]]></c>
        /// </summary>
        public const byte FIELD_TYPE_WSTRING_UNBOUNDED_SEQUENCE = 162;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_STRING_UNBOUNDED_SEQUENCE = 163]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_STRING_UNBOUNDED_SEQUENCE = 163;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_FIXED_WSTRING_UNBOUNDED_SEQUENCE = 164]]></c>
        /// </summary>
        public const byte FIELD_TYPE_FIXED_WSTRING_UNBOUNDED_SEQUENCE = 164;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_STRING_UNBOUNDED_SEQUENCE = 165]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_STRING_UNBOUNDED_SEQUENCE = 165;
        
        /// <summary>
        /// Originally defined as: <c><![CDATA[uint8 FIELD_TYPE_BOUNDED_WSTRING_UNBOUNDED_SEQUENCE = 166]]></c>
        /// </summary>
        public const byte FIELD_TYPE_BOUNDED_WSTRING_UNBOUNDED_SEQUENCE = 166;
        
        /// <summary>
        /// Identifying number for the type of the field, using one of the above constants.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint8 type_id 0]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public byte TypeId { get; set; }
        
        /// <summary>
        /// Only used when the type is an array or a bounded sequence.
        /// In the case of an array, this is the fixed capacity of the array.
        /// In the case of a bounded sequence, this is the maximum capacity of the sequence.
        /// In all other cases this field is unused.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint64 capacity]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public ulong Capacity { get; set; }
        
        /// <summary>
        /// Only used when the type is a fixed or bounded string/wstring, or a array/sequence of those.
        /// In the case of a fixed string/wstring, it is the fixed length of the string.
        /// In the case of a bounded string/wstring, it is the maximum capacity of the string.
        /// In the case of an array/sequence of fixed string/wstring, it is the fixed length of the strings.
        /// In the case of an array/sequence of bounded string/wstring, it is the maximum capacity of the strings.
        /// It is not currently possible to have different string capacities per element in the array/sequence.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[uint64 string_capacity]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public ulong StringCapacity { get; set; }
        
        private string __backingField__NestedTypeName;
        
        /// <summary>
        /// Only used when the type is a nested type or array/sequence of nested types.
        /// This is limited to 255 characters.
        /// TODO(wjwwood): this 255 character limit was chosen due to this being the limit
        /// for DDSI-RTPS based middlewares, which is the most commonly used right now.
        /// We lack a ROS 2 specific limit in our design documents, but we should update
        /// this and/or link to the design doc when that is available.
        /// </summary>
        /// <remarks>
        /// Originally defined as: <c><![CDATA[string<=255 nested_type_name]]></c>
        /// </remarks>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public string NestedTypeName
        {
            get
            {
                return __backingField__NestedTypeName;
            }
            [global::System.Diagnostics.CodeAnalysis.MemberNotNullAttribute(nameof(__backingField__NestedTypeName))]
            set
            {
                __backingField__NestedTypeName = value.Length <= 255 ? value : throw new global::System.ArgumentException("Size of the array or string 'NestedTypeName' must be less or equal than 255.");
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(nint data, global::System.Text.Encoding textEncoding)
        {
            WriteTo(ref global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public void WriteTo(ref Priv priv, global::System.Text.Encoding textEncoding)
        {
            priv.TypeId = this.TypeId;
            priv.Capacity = this.Capacity;
            priv.StringCapacity = this.StringCapacity;
            priv.NestedTypeName.CopyFrom(this.NestedTypeName, textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static global::Rosidl.Runtime.IMessage CreateFrom(nint data, global::System.Text.Encoding textEncoding)
        {
            return new FieldType(in global::System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()), textEncoding);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static nint UnsafeCreate()
        {
            return new(Priv.Create());
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeDestroy(nint data)
        {
            Priv.Destroy((Priv*)data);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitialize(nint data)
        {
            return Priv.TryInitialize(out System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalize(nint data)
        {
            Priv.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<Priv>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static bool UnsafeInitializeSequence(int size, nint data)
        {
            return PrivSequence.TryInitialize(size, out System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
        public static void UnsafeFinalizeSequence(nint data)
        {
            PrivSequence.Finalize(ref System.Runtime.CompilerServices.Unsafe.AsRef<PrivSequence>(data.ToPointer()));
        }
        
        /// <summary>
        /// Represents the type of a field and related meta-data.
        /// </summary>
        /// <remarks>
        /// Blittable native structure for <c>type_description_interfaces/msg/FieldType</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct Priv : global::System.IEquatable<Priv>, global::System.IDisposable
        {
            /// <summary>
            /// Identifying number for the type of the field, using one of the above constants.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[uint8 type_id 0]]></c>
            /// </remarks>
            public byte TypeId;
            
            /// <summary>
            /// Only used when the type is an array or a bounded sequence.
            /// In the case of an array, this is the fixed capacity of the array.
            /// In the case of a bounded sequence, this is the maximum capacity of the sequence.
            /// In all other cases this field is unused.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[uint64 capacity]]></c>
            /// </remarks>
            public ulong Capacity;
            
            /// <summary>
            /// Only used when the type is a fixed or bounded string/wstring, or a array/sequence of those.
            /// In the case of a fixed string/wstring, it is the fixed length of the string.
            /// In the case of a bounded string/wstring, it is the maximum capacity of the string.
            /// In the case of an array/sequence of fixed string/wstring, it is the fixed length of the strings.
            /// In the case of an array/sequence of bounded string/wstring, it is the maximum capacity of the strings.
            /// It is not currently possible to have different string capacities per element in the array/sequence.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[uint64 string_capacity]]></c>
            /// </remarks>
            public ulong StringCapacity;
            
            /// <summary>
            /// Only used when the type is a nested type or array/sequence of nested types.
            /// This is limited to 255 characters.
            /// TODO(wjwwood): this 255 character limit was chosen due to this being the limit
            /// for DDSI-RTPS based middlewares, which is the most commonly used right now.
            /// We lack a ROS 2 specific limit in our design documents, but we should update
            /// this and/or link to the design doc when that is available.
            /// </summary>
            /// <remarks>
            /// Originally defined as: <c><![CDATA[string<=255 nested_type_name]]></c>
            /// </remarks>
            public global::Rosidl.Runtime.Interop.CString NestedTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv()
            {
                ThrowIfNonSuccess(TryInitialize(out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(in Priv src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public Priv(Priv* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in Priv src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(Priv* src)
            {
                fixed (Priv* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in Priv input, out Priv output)
            {
                fixed (Priv* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(Priv other)
            {
                return Priv.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is Priv s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                var __hashCode = new global::System.HashCode();
                __hashCode.Add(this.TypeId);
                __hashCode.Add(this.Capacity);
                __hashCode.Add(this.StringCapacity);
                __hashCode.Add(this.NestedTypeName);
                return __hashCode.ToHashCode();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(Priv lhs, Priv rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(Priv lhs, Priv rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static Priv* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__create")]
                static extern Priv* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(Priv* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__destroy")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(out Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    return _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__init")]
                static extern bool _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref Priv msg)
            {
                fixed (Priv* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__fini")]
                static extern void _PInvoke(Priv* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in Priv lhs, in Priv rhs)
            {
                fixed (Priv* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__are_qual")]
                static extern bool _PInvoke(Priv* lhs, Priv* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(Priv* input, Priv* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__copy")]
                static extern bool _PInvoke(Priv* input, Priv* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Core.Ros2.Interfaces.TypeDescription.FieldType.Priv.{caller}'.");
                }
            }
        }
        
        /// <summary>
        /// Represents the type of a field and related meta-data.
        /// </summary>
        /// <remarks>
        /// Blittable native sequence structure for <c>type_description_interfaces/msg/FieldType</c>.
        /// </remarks>
        [global::System.Runtime.InteropServices.StructLayoutAttribute(global::System.Runtime.InteropServices.LayoutKind.Sequential)]
        public partial struct PrivSequence : global::System.IEquatable<PrivSequence>, global::System.IDisposable
        {
            private Priv* __data;
            
            private nuint __size;
            
            private nuint __capacity;
            
            public int Size => (int)__size;
            
            public int Capcacity => (int)__capacity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence()
                : this(0)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(int size)
            {
                ThrowIfNonSuccess(TryInitialize(size, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence src)
                : this(in src)
            {
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(in PrivSequence src)
                : this()
            {
                CopyFrom(in src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(PrivSequence* src)
                : this()
            {
                CopyFrom(src); 
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public PrivSequence(System.ReadOnlySpan<Priv> src)
                : this(src.Length)
            {
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void Dispose()
            {
                Finalize(ref this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public System.Span<Priv> AsSpan()
            {
                return new(__data, Size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(System.ReadOnlySpan<Priv> src)
            {
                Finalize(ref this);
                ThrowIfNonSuccess(TryInitialize(src.Length, out this));
                src.CopyTo(AsSpan());
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(in PrivSequence src)
            {
                ThrowIfNonSuccess(TryCopy(in src, out this));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public void CopyFrom(PrivSequence* src)
            {
                fixed (PrivSequence* pThis = &this)
                {
                    ThrowIfNonSuccess(TryCopy(src, pThis));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(in PrivSequence input, out PrivSequence output)
            {
                fixed (PrivSequence* pInput = &input, pOutput = &output)
                {
                    return TryCopy(pInput, pOutput);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public bool Equals(PrivSequence other)
            {
                return PrivSequence.AreEqual(in other, in this);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override bool Equals(object? obj) => obj is PrivSequence s ? this.Equals(s) : false;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public override int GetHashCode()
            {
                return global::System.HashCode.Combine((nint)__data, __size, __capacity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator ==(PrivSequence lhs, PrivSequence rhs)
            {
                return lhs.Equals(rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool operator !=(PrivSequence lhs, PrivSequence rhs)
            {
                return !(lhs == rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static PrivSequence* Create()
            {
                return _PInvoke();
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__create")]
                static extern PrivSequence* _PInvoke();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Destroy(PrivSequence* msg)
            {
                _PInvoke(msg);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__destroy")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static bool TryInitialize(int size, out PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    return _PInvoke(pMsg, (uint)size);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__init")]
                static extern bool _PInvoke(PrivSequence* msg, nuint size);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void Finalize(ref PrivSequence msg)
            {
                fixed (PrivSequence* pMsg = &msg)
                {
                    _PInvoke(pMsg);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__fini")]
                static extern void _PInvoke(PrivSequence* msg);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool AreEqual(in PrivSequence lhs, in PrivSequence rhs)
            {
                fixed (PrivSequence* plhs = &lhs, prhs = &rhs)
                {
                    return _PInvoke(plhs, prhs);
                }
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__are_qual")]
                static extern bool _PInvoke(PrivSequence* lhs, PrivSequence* rhs);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            private static bool TryCopy(PrivSequence* input, PrivSequence* output)
            {
                return _PInvoke(input, output);
                
                [global::System.Runtime.InteropServices.SuppressGCTransitionAttribute]
                [global::System.Runtime.InteropServices.DllImportAttribute("type_description_interfaces__rosidl_generator_c", EntryPoint = "type_description_interfaces__msg__FieldType__Sequence__copy")]
                static extern bool _PInvoke(PrivSequence* input, PrivSequence* output);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ros2cs", "1.3.2+da40d8cd913b1d7f1523f4fd2ce6a86ea7d47c2e")]
            public static void ThrowIfNonSuccess(bool ret, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute]
            string caller = "")
            {
                if (!ret)
                {
                    throw new global::Rosidl.Runtime.RosidlException($"An error occurred when calling 'global::Handling_Service.Core.Ros2.Interfaces.TypeDescription.FieldType.PrivSequence.{caller}'.");
                }
            }
        }
    }
}
